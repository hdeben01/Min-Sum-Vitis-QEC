// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module compute_row_operations_compute_row_operations_Pipeline_VITIS_LOOP_87_9_VITIS_LOOP_89_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY,
        m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY,
        m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST,
        m_axi_gmem0_0_RID,
        m_axi_gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER,
        m_axi_gmem0_0_RRESP,
        m_axi_gmem0_0_BVALID,
        m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP,
        m_axi_gmem0_0_BID,
        m_axi_gmem0_0_BUSER,
        sext_ln15,
        L_cache_address0,
        L_cache_ce0,
        L_cache_q0,
        L_cache_1_address0,
        L_cache_1_ce0,
        L_cache_1_q0,
        L_cache_2_address0,
        L_cache_2_ce0,
        L_cache_2_q0,
        L_cache_3_address0,
        L_cache_3_ce0,
        L_cache_3_q0,
        L_cache_4_address0,
        L_cache_4_ce0,
        L_cache_4_q0,
        L_cache_5_address0,
        L_cache_5_ce0,
        L_cache_5_q0,
        L_cache_6_address0,
        L_cache_6_ce0,
        L_cache_6_q0,
        L_cache_7_address0,
        L_cache_7_ce0,
        L_cache_7_q0,
        L_cache_8_address0,
        L_cache_8_ce0,
        L_cache_8_q0,
        L_cache_9_address0,
        L_cache_9_ce0,
        L_cache_9_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_0_AWVALID;
input   m_axi_gmem0_0_AWREADY;
output  [63:0] m_axi_gmem0_0_AWADDR;
output  [0:0] m_axi_gmem0_0_AWID;
output  [31:0] m_axi_gmem0_0_AWLEN;
output  [2:0] m_axi_gmem0_0_AWSIZE;
output  [1:0] m_axi_gmem0_0_AWBURST;
output  [1:0] m_axi_gmem0_0_AWLOCK;
output  [3:0] m_axi_gmem0_0_AWCACHE;
output  [2:0] m_axi_gmem0_0_AWPROT;
output  [3:0] m_axi_gmem0_0_AWQOS;
output  [3:0] m_axi_gmem0_0_AWREGION;
output  [0:0] m_axi_gmem0_0_AWUSER;
output   m_axi_gmem0_0_WVALID;
input   m_axi_gmem0_0_WREADY;
output  [63:0] m_axi_gmem0_0_WDATA;
output  [7:0] m_axi_gmem0_0_WSTRB;
output   m_axi_gmem0_0_WLAST;
output  [0:0] m_axi_gmem0_0_WID;
output  [0:0] m_axi_gmem0_0_WUSER;
output   m_axi_gmem0_0_ARVALID;
input   m_axi_gmem0_0_ARREADY;
output  [63:0] m_axi_gmem0_0_ARADDR;
output  [0:0] m_axi_gmem0_0_ARID;
output  [31:0] m_axi_gmem0_0_ARLEN;
output  [2:0] m_axi_gmem0_0_ARSIZE;
output  [1:0] m_axi_gmem0_0_ARBURST;
output  [1:0] m_axi_gmem0_0_ARLOCK;
output  [3:0] m_axi_gmem0_0_ARCACHE;
output  [2:0] m_axi_gmem0_0_ARPROT;
output  [3:0] m_axi_gmem0_0_ARQOS;
output  [3:0] m_axi_gmem0_0_ARREGION;
output  [0:0] m_axi_gmem0_0_ARUSER;
input   m_axi_gmem0_0_RVALID;
output   m_axi_gmem0_0_RREADY;
input  [63:0] m_axi_gmem0_0_RDATA;
input   m_axi_gmem0_0_RLAST;
input  [0:0] m_axi_gmem0_0_RID;
input  [8:0] m_axi_gmem0_0_RFIFONUM;
input  [0:0] m_axi_gmem0_0_RUSER;
input  [1:0] m_axi_gmem0_0_RRESP;
input   m_axi_gmem0_0_BVALID;
output   m_axi_gmem0_0_BREADY;
input  [1:0] m_axi_gmem0_0_BRESP;
input  [0:0] m_axi_gmem0_0_BID;
input  [0:0] m_axi_gmem0_0_BUSER;
input  [60:0] sext_ln15;
output  [1:0] L_cache_address0;
output   L_cache_ce0;
input  [31:0] L_cache_q0;
output  [1:0] L_cache_1_address0;
output   L_cache_1_ce0;
input  [31:0] L_cache_1_q0;
output  [1:0] L_cache_2_address0;
output   L_cache_2_ce0;
input  [31:0] L_cache_2_q0;
output  [1:0] L_cache_3_address0;
output   L_cache_3_ce0;
input  [31:0] L_cache_3_q0;
output  [1:0] L_cache_4_address0;
output   L_cache_4_ce0;
input  [31:0] L_cache_4_q0;
output  [1:0] L_cache_5_address0;
output   L_cache_5_ce0;
input  [31:0] L_cache_5_q0;
output  [1:0] L_cache_6_address0;
output   L_cache_6_ce0;
input  [31:0] L_cache_6_q0;
output  [1:0] L_cache_7_address0;
output   L_cache_7_ce0;
input  [31:0] L_cache_7_q0;
output  [1:0] L_cache_8_address0;
output   L_cache_8_ce0;
input  [31:0] L_cache_8_q0;
output  [1:0] L_cache_9_address0;
output   L_cache_9_ce0;
input  [31:0] L_cache_9_q0;

reg ap_idle;
reg m_axi_gmem0_0_WVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg   [0:0] trunc_ln89_reg_749;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln87_fu_329_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_W;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_11001_grp0;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln89_fu_347_p2;
reg   [0:0] icmp_ln89_reg_684;
reg   [0:0] icmp_ln89_reg_684_pp0_iter1_reg;
wire   [3:0] select_ln87_fu_353_p3;
reg   [3:0] select_ln87_reg_689;
reg   [3:0] select_ln87_reg_689_pp0_iter1_reg;
wire   [0:0] first_iter_2_fu_375_p2;
reg   [0:0] first_iter_2_reg_695;
wire   [0:0] trunc_ln89_fu_506_p1;
wire   [63:0] or_ln_fu_560_p3;
reg   [63:0] or_ln_reg_753;
wire   [63:0] zext_ln87_fu_381_p1;
wire    ap_block_pp0_stage0_01001;
reg   [31:0] phi_ln90_fu_102;
wire   [31:0] select_ln89_fu_568_p3;
wire    ap_loop_init;
reg   [3:0] j_fu_106;
wire   [3:0] add_ln89_fu_395_p2;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [1:0] i_fu_110;
wire   [1:0] select_ln87_2_fu_367_p3;
reg   [1:0] ap_sig_allocacmp_i_load;
reg   [4:0] indvar_flatten33_fu_114;
wire   [4:0] add_ln87_fu_335_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten33_load;
reg   [31:0] L_cache_9_load1_fu_118;
reg   [31:0] L_cache_8_load3_fu_122;
reg   [31:0] L_cache_7_load5_fu_126;
reg   [31:0] L_cache_6_load7_fu_130;
reg   [31:0] L_cache_5_load9_fu_134;
reg   [31:0] L_cache_4_load11_fu_138;
reg   [31:0] L_cache_3_load13_fu_142;
reg   [31:0] L_cache_2_load15_fu_146;
reg   [31:0] L_cache_1_load17_fu_150;
reg   [31:0] L_cache_load19_fu_154;
reg    L_cache_ce0_local;
reg    L_cache_1_ce0_local;
reg    L_cache_2_ce0_local;
reg    L_cache_3_ce0_local;
reg    L_cache_4_ce0_local;
reg    L_cache_5_ce0_local;
reg    L_cache_6_ce0_local;
reg    L_cache_7_ce0_local;
reg    L_cache_8_ce0_local;
reg    L_cache_9_ce0_local;
wire   [1:0] add_ln87_1_fu_361_p2;
wire   [31:0] tmp_8_fu_509_p21;
wire   [31:0] tmp_8_fu_509_p23;
wire   [31:0] bitcast_ln90_fu_556_p1;
wire   [31:0] select_ln87_1_fu_469_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [3:0] tmp_8_fu_509_p1;
wire   [3:0] tmp_8_fu_509_p3;
wire   [3:0] tmp_8_fu_509_p5;
wire   [3:0] tmp_8_fu_509_p7;
wire   [3:0] tmp_8_fu_509_p9;
wire   [3:0] tmp_8_fu_509_p11;
wire   [3:0] tmp_8_fu_509_p13;
wire   [3:0] tmp_8_fu_509_p15;
wire  signed [3:0] tmp_8_fu_509_p17;
wire  signed [3:0] tmp_8_fu_509_p19;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 phi_ln90_fu_102 = 32'd0;
#0 j_fu_106 = 4'd0;
#0 i_fu_110 = 2'd0;
#0 indvar_flatten33_fu_114 = 5'd0;
#0 L_cache_9_load1_fu_118 = 32'd0;
#0 L_cache_8_load3_fu_122 = 32'd0;
#0 L_cache_7_load5_fu_126 = 32'd0;
#0 L_cache_6_load7_fu_130 = 32'd0;
#0 L_cache_5_load9_fu_134 = 32'd0;
#0 L_cache_4_load11_fu_138 = 32'd0;
#0 L_cache_3_load13_fu_142 = 32'd0;
#0 L_cache_2_load15_fu_146 = 32'd0;
#0 L_cache_1_load17_fu_150 = 32'd0;
#0 L_cache_load19_fu_154 = 32'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) compute_row_operations_sparsemux_21_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_21_4_32_1_1_U124(
    .din0(L_cache_load19_fu_154),
    .din1(L_cache_1_load17_fu_150),
    .din2(L_cache_2_load15_fu_146),
    .din3(L_cache_3_load13_fu_142),
    .din4(L_cache_4_load11_fu_138),
    .din5(L_cache_5_load9_fu_134),
    .din6(L_cache_6_load7_fu_130),
    .din7(L_cache_7_load5_fu_126),
    .din8(L_cache_8_load3_fu_122),
    .din9(L_cache_9_load1_fu_118),
    .def(tmp_8_fu_509_p21),
    .sel(select_ln87_reg_689_pp0_iter1_reg),
    .dout(tmp_8_fu_509_p23)
);

compute_row_operations_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln87_fu_329_p2 == 1'd0))) begin
            i_fu_110 <= select_ln87_2_fu_367_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_110 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln87_fu_329_p2 == 1'd0))) begin
            indvar_flatten33_fu_114 <= add_ln87_fu_335_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten33_fu_114 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln87_fu_329_p2 == 1'd0))) begin
            j_fu_106 <= add_ln89_fu_395_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_106 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_ln90_fu_102 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_ln90_fu_102 <= select_ln89_fu_568_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (first_iter_2_reg_695 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_1_load17_fu_150 <= L_cache_1_q0;
        L_cache_2_load15_fu_146 <= L_cache_2_q0;
        L_cache_3_load13_fu_142 <= L_cache_3_q0;
        L_cache_4_load11_fu_138 <= L_cache_4_q0;
        L_cache_5_load9_fu_134 <= L_cache_5_q0;
        L_cache_6_load7_fu_130 <= L_cache_6_q0;
        L_cache_7_load5_fu_126 <= L_cache_7_q0;
        L_cache_8_load3_fu_122 <= L_cache_8_q0;
        L_cache_9_load1_fu_118 <= L_cache_9_q0;
        L_cache_load19_fu_154 <= L_cache_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        first_iter_2_reg_695 <= first_iter_2_fu_375_p2;
        icmp_ln89_reg_684 <= icmp_ln89_fu_347_p2;
        icmp_ln89_reg_684_pp0_iter1_reg <= icmp_ln89_reg_684;
        select_ln87_reg_689 <= select_ln87_fu_353_p3;
        select_ln87_reg_689_pp0_iter1_reg <= select_ln87_reg_689;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_ln_reg_753 <= or_ln_fu_560_p3;
        trunc_ln89_reg_749 <= trunc_ln89_fu_506_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_1_ce0_local = 1'b1;
    end else begin
        L_cache_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_2_ce0_local = 1'b1;
    end else begin
        L_cache_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_3_ce0_local = 1'b1;
    end else begin
        L_cache_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_4_ce0_local = 1'b1;
    end else begin
        L_cache_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_5_ce0_local = 1'b1;
    end else begin
        L_cache_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_6_ce0_local = 1'b1;
    end else begin
        L_cache_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_7_ce0_local = 1'b1;
    end else begin
        L_cache_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_8_ce0_local = 1'b1;
    end else begin
        L_cache_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_9_ce0_local = 1'b1;
    end else begin
        L_cache_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L_cache_ce0_local = 1'b1;
    end else begin
        L_cache_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_329_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 2'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten33_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten33_load = indvar_flatten33_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln89_reg_749 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        gmem0_blk_n_W = m_axi_gmem0_0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln89_reg_749 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m_axi_gmem0_0_WVALID = 1'b1;
    end else begin
        m_axi_gmem0_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L_cache_1_address0 = zext_ln87_fu_381_p1;

assign L_cache_1_ce0 = L_cache_1_ce0_local;

assign L_cache_2_address0 = zext_ln87_fu_381_p1;

assign L_cache_2_ce0 = L_cache_2_ce0_local;

assign L_cache_3_address0 = zext_ln87_fu_381_p1;

assign L_cache_3_ce0 = L_cache_3_ce0_local;

assign L_cache_4_address0 = zext_ln87_fu_381_p1;

assign L_cache_4_ce0 = L_cache_4_ce0_local;

assign L_cache_5_address0 = zext_ln87_fu_381_p1;

assign L_cache_5_ce0 = L_cache_5_ce0_local;

assign L_cache_6_address0 = zext_ln87_fu_381_p1;

assign L_cache_6_ce0 = L_cache_6_ce0_local;

assign L_cache_7_address0 = zext_ln87_fu_381_p1;

assign L_cache_7_ce0 = L_cache_7_ce0_local;

assign L_cache_8_address0 = zext_ln87_fu_381_p1;

assign L_cache_8_ce0 = L_cache_8_ce0_local;

assign L_cache_9_address0 = zext_ln87_fu_381_p1;

assign L_cache_9_ce0 = L_cache_9_ce0_local;

assign L_cache_address0 = zext_ln87_fu_381_p1;

assign L_cache_ce0 = L_cache_ce0_local;

assign add_ln87_1_fu_361_p2 = (ap_sig_allocacmp_i_load + 2'd1);

assign add_ln87_fu_335_p2 = (ap_sig_allocacmp_indvar_flatten33_load + 5'd1);

assign add_ln89_fu_395_p2 = (select_ln87_fu_353_p3 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((trunc_ln89_reg_749 == 1'd1) & (m_axi_gmem0_0_WREADY == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln90_fu_556_p1 = tmp_8_fu_509_p23;

assign first_iter_2_fu_375_p2 = ((select_ln87_fu_353_p3 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_329_p2 = ((ap_sig_allocacmp_indvar_flatten33_load == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_347_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign m_axi_gmem0_0_ARADDR = 64'd0;

assign m_axi_gmem0_0_ARBURST = 2'd0;

assign m_axi_gmem0_0_ARCACHE = 4'd0;

assign m_axi_gmem0_0_ARID = 1'd0;

assign m_axi_gmem0_0_ARLEN = 32'd0;

assign m_axi_gmem0_0_ARLOCK = 2'd0;

assign m_axi_gmem0_0_ARPROT = 3'd0;

assign m_axi_gmem0_0_ARQOS = 4'd0;

assign m_axi_gmem0_0_ARREGION = 4'd0;

assign m_axi_gmem0_0_ARSIZE = 3'd0;

assign m_axi_gmem0_0_ARUSER = 1'd0;

assign m_axi_gmem0_0_ARVALID = 1'b0;

assign m_axi_gmem0_0_AWADDR = 64'd0;

assign m_axi_gmem0_0_AWBURST = 2'd0;

assign m_axi_gmem0_0_AWCACHE = 4'd0;

assign m_axi_gmem0_0_AWID = 1'd0;

assign m_axi_gmem0_0_AWLEN = 32'd0;

assign m_axi_gmem0_0_AWLOCK = 2'd0;

assign m_axi_gmem0_0_AWPROT = 3'd0;

assign m_axi_gmem0_0_AWQOS = 4'd0;

assign m_axi_gmem0_0_AWREGION = 4'd0;

assign m_axi_gmem0_0_AWSIZE = 3'd0;

assign m_axi_gmem0_0_AWUSER = 1'd0;

assign m_axi_gmem0_0_AWVALID = 1'b0;

assign m_axi_gmem0_0_BREADY = 1'b0;

assign m_axi_gmem0_0_RREADY = 1'b0;

assign m_axi_gmem0_0_WDATA = or_ln_reg_753;

assign m_axi_gmem0_0_WID = 1'd0;

assign m_axi_gmem0_0_WLAST = 1'b0;

assign m_axi_gmem0_0_WSTRB = 8'd255;

assign m_axi_gmem0_0_WUSER = 1'd0;

assign or_ln_fu_560_p3 = {{bitcast_ln90_fu_556_p1}, {select_ln87_1_fu_469_p3}};

assign select_ln87_1_fu_469_p3 = ((icmp_ln89_reg_684_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : phi_ln90_fu_102);

assign select_ln87_2_fu_367_p3 = ((icmp_ln89_fu_347_p2[0:0] == 1'b1) ? add_ln87_1_fu_361_p2 : ap_sig_allocacmp_i_load);

assign select_ln87_fu_353_p3 = ((icmp_ln89_fu_347_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign select_ln89_fu_568_p3 = ((trunc_ln89_fu_506_p1[0:0] == 1'b1) ? 32'd0 : bitcast_ln90_fu_556_p1);

assign tmp_8_fu_509_p21 = 'bx;

assign trunc_ln89_fu_506_p1 = select_ln87_reg_689_pp0_iter1_reg[0:0];

assign zext_ln87_fu_381_p1 = select_ln87_2_fu_367_p3;

endmodule //compute_row_operations_compute_row_operations_Pipeline_VITIS_LOOP_87_9_VITIS_LOOP_89_10
