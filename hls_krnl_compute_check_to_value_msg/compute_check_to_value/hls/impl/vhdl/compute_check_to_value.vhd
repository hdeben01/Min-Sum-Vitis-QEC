-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_check_to_value is
generic (
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of compute_check_to_value is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "compute_check_to_value_compute_check_to_value,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=7581,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=4297,HLS_SYN_LUT=4447,HLS_VERSION=2025_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (76 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (76 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (76 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (76 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (76 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (76 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (76 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (76 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (76 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (76 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (76 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal L : STD_LOGIC_VECTOR (63 downto 0);
    signal syndrome : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal size_checks : STD_LOGIC_VECTOR (31 downto 0);
    signal size_vnode : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal size_vnode_read_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal out_r_read_reg_376 : STD_LOGIC_VECTOR (63 downto 0);
    signal syndrome_read_reg_381 : STD_LOGIC_VECTOR (63 downto 0);
    signal L_read_reg_386 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln12_fu_217_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln12_reg_415 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln12_1_fu_235_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln12_1_reg_420 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_31_fu_296_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_31_reg_428 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_32_fu_300_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_32_reg_433 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_addr_reg_439 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_addr_read_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_AWVALID : STD_LOGIC;
    signal gmem0_0_AWREADY : STD_LOGIC;
    signal gmem0_0_WVALID : STD_LOGIC;
    signal gmem0_0_WREADY : STD_LOGIC;
    signal gmem0_0_ARVALID : STD_LOGIC;
    signal gmem0_0_ARREADY : STD_LOGIC;
    signal gmem0_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_RVALID : STD_LOGIC;
    signal gmem0_0_RREADY : STD_LOGIC;
    signal gmem0_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_0_BVALID : STD_LOGIC;
    signal gmem0_0_BREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_done : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_idle : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_ready : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WLAST : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_RREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_BREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min2_3_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min2_3_out_ap_vld : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min1_3_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min1_3_out_ap_vld : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_minpos_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_minpos_2_out_ap_vld : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_row_sign_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_row_sign_1_out_ap_vld : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_ce : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_done : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_idle : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_ready : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WLAST : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_RREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_BREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WLAST : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_RREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_BREADY : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_ce : STD_LOGIC;
    signal gmem1_0_AWREADY : STD_LOGIC;
    signal gmem1_0_WREADY : STD_LOGIC;
    signal gmem1_0_ARVALID : STD_LOGIC;
    signal gmem1_0_ARREADY : STD_LOGIC;
    signal gmem1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_0_RVALID : STD_LOGIC;
    signal gmem1_0_RREADY : STD_LOGIC;
    signal gmem1_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_0_BVALID : STD_LOGIC;
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln12_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal min2_3_loc_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal min1_3_loc_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal minpos_2_loc_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal p_cast_cast_fu_333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_116 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln12_fu_256_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_27_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_207_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_29_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_28_fu_225_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_262_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_274_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_fu_270_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl16_fu_282_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_30_fu_286_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_cast5_fu_292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_306_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast7_fu_314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_33_fu_318_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_323_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_462_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_462_ce : STD_LOGIC;
    signal grp_fu_462_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (76 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component compute_check_to_value_compute_check_to_value_Pipeline_VITIS_LOOP_21_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_WREADY : IN STD_LOGIC;
        m_axi_gmem1_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RVALID : IN STD_LOGIC;
        m_axi_gmem1_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_RLAST : IN STD_LOGIC;
        m_axi_gmem1_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_BVALID : IN STD_LOGIC;
        m_axi_gmem1_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        empty : IN STD_LOGIC_VECTOR (63 downto 0);
        size_vnode : IN STD_LOGIC_VECTOR (31 downto 0);
        min2_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        min2_3_out_ap_vld : OUT STD_LOGIC;
        min1_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        min1_3_out_ap_vld : OUT STD_LOGIC;
        minpos_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        minpos_2_out_ap_vld : OUT STD_LOGIC;
        row_sign_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        row_sign_1_out_ap_vld : OUT STD_LOGIC;
        grp_fu_462_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_462_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_462_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_462_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_462_p_ce : OUT STD_LOGIC );
    end component;


    component compute_check_to_value_compute_check_to_value_Pipeline_VITIS_LOOP_36_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_WREADY : IN STD_LOGIC;
        m_axi_gmem1_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RVALID : IN STD_LOGIC;
        m_axi_gmem1_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_RLAST : IN STD_LOGIC;
        m_axi_gmem1_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_BVALID : IN STD_LOGIC;
        m_axi_gmem1_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        select_ln12 : IN STD_LOGIC_VECTOR (5 downto 0);
        empty : IN STD_LOGIC_VECTOR (63 downto 0);
        row_sign_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        gmem0_load : IN STD_LOGIC_VECTOR (31 downto 0);
        minpos_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        min1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        min2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r : IN STD_LOGIC_VECTOR (63 downto 0);
        p_cast5 : IN STD_LOGIC_VECTOR (11 downto 0);
        grp_fu_462_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_462_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_462_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_462_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_462_p_ce : OUT STD_LOGIC );
    end component;


    component compute_check_to_value_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component compute_check_to_value_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        L : OUT STD_LOGIC_VECTOR (63 downto 0);
        syndrome : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        size_checks : OUT STD_LOGIC_VECTOR (31 downto 0);
        size_vnode : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component compute_check_to_value_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_NUM_READ_OUTSTANDING : INTEGER;
        CH0_NUM_WRITE_OUTSTANDING : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component compute_check_to_value_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_NUM_READ_OUTSTANDING : INTEGER;
        CH0_NUM_WRITE_OUTSTANDING : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178 : component compute_check_to_value_compute_check_to_value_Pipeline_VITIS_LOOP_21_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start,
        ap_done => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_done,
        ap_idle => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_idle,
        ap_ready => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_ready,
        m_axi_gmem1_0_AWVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWVALID,
        m_axi_gmem1_0_AWREADY => ap_const_logic_0,
        m_axi_gmem1_0_AWADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWADDR,
        m_axi_gmem1_0_AWID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWID,
        m_axi_gmem1_0_AWLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWLEN,
        m_axi_gmem1_0_AWSIZE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWSIZE,
        m_axi_gmem1_0_AWBURST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWBURST,
        m_axi_gmem1_0_AWLOCK => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWLOCK,
        m_axi_gmem1_0_AWCACHE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWCACHE,
        m_axi_gmem1_0_AWPROT => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWPROT,
        m_axi_gmem1_0_AWQOS => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWQOS,
        m_axi_gmem1_0_AWREGION => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWREGION,
        m_axi_gmem1_0_AWUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_AWUSER,
        m_axi_gmem1_0_WVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WVALID,
        m_axi_gmem1_0_WREADY => ap_const_logic_0,
        m_axi_gmem1_0_WDATA => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WDATA,
        m_axi_gmem1_0_WSTRB => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WSTRB,
        m_axi_gmem1_0_WLAST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WLAST,
        m_axi_gmem1_0_WID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WID,
        m_axi_gmem1_0_WUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_WUSER,
        m_axi_gmem1_0_ARVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARVALID,
        m_axi_gmem1_0_ARREADY => gmem1_0_ARREADY,
        m_axi_gmem1_0_ARADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARADDR,
        m_axi_gmem1_0_ARID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARID,
        m_axi_gmem1_0_ARLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARLEN,
        m_axi_gmem1_0_ARSIZE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARSIZE,
        m_axi_gmem1_0_ARBURST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARBURST,
        m_axi_gmem1_0_ARLOCK => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARLOCK,
        m_axi_gmem1_0_ARCACHE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARCACHE,
        m_axi_gmem1_0_ARPROT => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARPROT,
        m_axi_gmem1_0_ARQOS => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARQOS,
        m_axi_gmem1_0_ARREGION => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARREGION,
        m_axi_gmem1_0_ARUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARUSER,
        m_axi_gmem1_0_RVALID => gmem1_0_RVALID,
        m_axi_gmem1_0_RREADY => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_RREADY,
        m_axi_gmem1_0_RDATA => gmem1_0_RDATA,
        m_axi_gmem1_0_RLAST => ap_const_logic_0,
        m_axi_gmem1_0_RID => ap_const_lv1_0,
        m_axi_gmem1_0_RFIFONUM => gmem1_0_RFIFONUM,
        m_axi_gmem1_0_RUSER => ap_const_lv1_0,
        m_axi_gmem1_0_RRESP => ap_const_lv2_0,
        m_axi_gmem1_0_BVALID => ap_const_logic_0,
        m_axi_gmem1_0_BREADY => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_BREADY,
        m_axi_gmem1_0_BRESP => ap_const_lv2_0,
        m_axi_gmem1_0_BID => ap_const_lv1_0,
        m_axi_gmem1_0_BUSER => ap_const_lv1_0,
        empty => empty_32_reg_433,
        size_vnode => size_vnode_read_reg_371,
        min2_3_out => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min2_3_out,
        min2_3_out_ap_vld => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min2_3_out_ap_vld,
        min1_3_out => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min1_3_out,
        min1_3_out_ap_vld => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min1_3_out_ap_vld,
        minpos_2_out => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_minpos_2_out,
        minpos_2_out_ap_vld => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_minpos_2_out_ap_vld,
        row_sign_1_out => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_row_sign_1_out,
        row_sign_1_out_ap_vld => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_row_sign_1_out_ap_vld,
        grp_fu_462_p_din0 => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din0,
        grp_fu_462_p_din1 => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din1,
        grp_fu_462_p_opcode => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_opcode,
        grp_fu_462_p_dout0 => grp_fu_462_p2,
        grp_fu_462_p_ce => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_ce);

    grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190 : component compute_check_to_value_compute_check_to_value_Pipeline_VITIS_LOOP_36_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start,
        ap_done => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_done,
        ap_idle => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_idle,
        ap_ready => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_ready,
        m_axi_gmem1_0_AWVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWVALID,
        m_axi_gmem1_0_AWREADY => ap_const_logic_0,
        m_axi_gmem1_0_AWADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWADDR,
        m_axi_gmem1_0_AWID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWID,
        m_axi_gmem1_0_AWLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWLEN,
        m_axi_gmem1_0_AWSIZE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWSIZE,
        m_axi_gmem1_0_AWBURST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWBURST,
        m_axi_gmem1_0_AWLOCK => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWLOCK,
        m_axi_gmem1_0_AWCACHE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWCACHE,
        m_axi_gmem1_0_AWPROT => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWPROT,
        m_axi_gmem1_0_AWQOS => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWQOS,
        m_axi_gmem1_0_AWREGION => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWREGION,
        m_axi_gmem1_0_AWUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_AWUSER,
        m_axi_gmem1_0_WVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WVALID,
        m_axi_gmem1_0_WREADY => ap_const_logic_0,
        m_axi_gmem1_0_WDATA => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WDATA,
        m_axi_gmem1_0_WSTRB => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WSTRB,
        m_axi_gmem1_0_WLAST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WLAST,
        m_axi_gmem1_0_WID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WID,
        m_axi_gmem1_0_WUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_WUSER,
        m_axi_gmem1_0_ARVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARVALID,
        m_axi_gmem1_0_ARREADY => gmem1_0_ARREADY,
        m_axi_gmem1_0_ARADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARADDR,
        m_axi_gmem1_0_ARID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARID,
        m_axi_gmem1_0_ARLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARLEN,
        m_axi_gmem1_0_ARSIZE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARSIZE,
        m_axi_gmem1_0_ARBURST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARBURST,
        m_axi_gmem1_0_ARLOCK => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARLOCK,
        m_axi_gmem1_0_ARCACHE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARCACHE,
        m_axi_gmem1_0_ARPROT => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARPROT,
        m_axi_gmem1_0_ARQOS => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARQOS,
        m_axi_gmem1_0_ARREGION => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARREGION,
        m_axi_gmem1_0_ARUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARUSER,
        m_axi_gmem1_0_RVALID => gmem1_0_RVALID,
        m_axi_gmem1_0_RREADY => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_RREADY,
        m_axi_gmem1_0_RDATA => gmem1_0_RDATA,
        m_axi_gmem1_0_RLAST => ap_const_logic_0,
        m_axi_gmem1_0_RID => ap_const_lv1_0,
        m_axi_gmem1_0_RFIFONUM => gmem1_0_RFIFONUM,
        m_axi_gmem1_0_RUSER => ap_const_lv1_0,
        m_axi_gmem1_0_RRESP => ap_const_lv2_0,
        m_axi_gmem1_0_BVALID => ap_const_logic_0,
        m_axi_gmem1_0_BREADY => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_BREADY,
        m_axi_gmem1_0_BRESP => ap_const_lv2_0,
        m_axi_gmem1_0_BID => ap_const_lv1_0,
        m_axi_gmem1_0_BUSER => ap_const_lv1_0,
        m_axi_gmem0_0_AWVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY => gmem0_0_AWREADY,
        m_axi_gmem0_0_AWADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY => gmem0_0_WREADY,
        m_axi_gmem0_0_WDATA => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_0_ARADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID => ap_const_logic_0,
        m_axi_gmem0_0_RREADY => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA => ap_const_lv32_0,
        m_axi_gmem0_0_RLAST => ap_const_logic_0,
        m_axi_gmem0_0_RID => ap_const_lv1_0,
        m_axi_gmem0_0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_0_BVALID => gmem0_0_BVALID,
        m_axi_gmem0_0_BREADY => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_0_BID => ap_const_lv1_0,
        m_axi_gmem0_0_BUSER => ap_const_lv1_0,
        select_ln12 => select_ln12_reg_415,
        empty => empty_32_reg_433,
        row_sign_1_reload => grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_row_sign_1_out,
        gmem0_load => gmem0_addr_read_reg_445,
        minpos_2_reload => minpos_2_loc_fu_124,
        min1_3_reload => min1_3_loc_fu_128,
        min2_3_reload => min2_3_loc_fu_132,
        out_r => out_r_read_reg_376,
        p_cast5 => empty_31_reg_428,
        grp_fu_462_p_din0 => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din0,
        grp_fu_462_p_din1 => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din1,
        grp_fu_462_p_opcode => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_opcode,
        grp_fu_462_p_dout0 => grp_fu_462_p2,
        grp_fu_462_p_ce => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_ce);

    control_s_axi_U : component compute_check_to_value_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        L => L,
        syndrome => syndrome,
        out_r => out_r,
        size_checks => size_checks,
        size_vnode => size_vnode,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component compute_check_to_value_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        CH0_NUM_READ_OUTSTANDING => 16,
        CH0_NUM_WRITE_OUTSTANDING => 16,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem0_0_ARVALID,
        I_CH0_ARREADY => gmem0_0_ARREADY,
        I_CH0_ARADDR => gmem0_addr_reg_439,
        I_CH0_ARLEN => gmem0_0_ARLEN,
        I_CH0_RVALID => gmem0_0_RVALID,
        I_CH0_RREADY => gmem0_0_RREADY,
        I_CH0_RDATA => gmem0_0_RDATA,
        I_CH0_RFIFONUM => gmem0_0_RFIFONUM,
        I_CH0_AWVALID => gmem0_0_AWVALID,
        I_CH0_AWREADY => gmem0_0_AWREADY,
        I_CH0_AWADDR => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWADDR,
        I_CH0_AWLEN => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWLEN,
        I_CH0_WVALID => gmem0_0_WVALID,
        I_CH0_WREADY => gmem0_0_WREADY,
        I_CH0_WDATA => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WDATA,
        I_CH0_WSTRB => grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WSTRB,
        I_CH0_BVALID => gmem0_0_BVALID,
        I_CH0_BREADY => gmem0_0_BREADY);

    gmem1_m_axi_U : component compute_check_to_value_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        CH0_NUM_READ_OUTSTANDING => 16,
        CH0_NUM_WRITE_OUTSTANDING => 16,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem1_0_ARVALID,
        I_CH0_ARREADY => gmem1_0_ARREADY,
        I_CH0_ARADDR => gmem1_0_ARADDR,
        I_CH0_ARLEN => gmem1_0_ARLEN,
        I_CH0_RVALID => gmem1_0_RVALID,
        I_CH0_RREADY => gmem1_0_RREADY,
        I_CH0_RDATA => gmem1_0_RDATA,
        I_CH0_RFIFONUM => gmem1_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem1_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem1_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem1_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    fcmp_32ns_32ns_1_2_no_dsp_1_U26 : component compute_check_to_value_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_462_p0,
        din1 => grp_fu_462_p1,
        ce => grp_fu_462_ce,
        opcode => grp_fu_462_opcode,
        dout => grp_fu_462_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln12_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln12_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
                    grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    i_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_116 <= ap_const_lv5_0;
            elsif (((icmp_ln12_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_116 <= add_ln12_fu_256_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                L_read_reg_386 <= L;
                out_r_read_reg_376 <= out_r;
                select_ln12_1_reg_420 <= select_ln12_1_fu_235_p3;
                select_ln12_reg_415 <= select_ln12_fu_217_p3;
                size_vnode_read_reg_371 <= size_vnode;
                syndrome_read_reg_381 <= syndrome;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    empty_31_reg_428(11 downto 5) <= empty_31_fu_296_p1(11 downto 5);
                empty_32_reg_433 <= empty_32_fu_300_p2;
                gmem0_addr_reg_439 <= p_cast_cast_fu_333_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem0_0_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                gmem0_addr_read_reg_445 <= gmem0_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min1_3_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                min1_3_loc_fu_128 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min1_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min2_3_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                min2_3_loc_fu_132 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_min2_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_minpos_2_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                minpos_2_loc_fu_124 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_minpos_2_out;
            end if;
        end if;
    end process;
    empty_31_reg_428(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state75, ap_block_state1, ap_CS_fsm_state2, gmem0_0_ARREADY, gmem0_0_RVALID, grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_done, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_done, icmp_ln12_fu_251_p2, ap_CS_fsm_state3, ap_CS_fsm_state77)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln12_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((gmem0_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                if (((gmem0_0_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (((grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln12_fu_256_p2 <= std_logic_vector(unsigned(i_fu_116) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_done)
    begin
        if ((grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(gmem0_0_ARREADY)
    begin
        if ((gmem0_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;

    ap_ST_fsm_state75_blk_assign_proc : process(gmem0_0_RVALID)
    begin
        if ((gmem0_0_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state75_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state75_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state76_blk <= ap_const_logic_0;

    ap_ST_fsm_state77_blk_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_done)
    begin
        if ((grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state77_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state77_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln12_fu_251_p2)
    begin
        if (((icmp_ln12_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln12_fu_251_p2)
    begin
        if (((icmp_ln12_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_27_fu_211_p2 <= "1" when (unsigned(size_vnode) < unsigned(ap_const_lv32_28)) else "0";
    empty_28_fu_225_p1 <= size_checks(5 - 1 downto 0);
    empty_29_fu_229_p2 <= "1" when (unsigned(size_checks) < unsigned(ap_const_lv32_14)) else "0";
    empty_30_fu_286_p2 <= std_logic_vector(unsigned(p_shl_fu_270_p1) + unsigned(p_shl16_fu_282_p1));
    empty_31_fu_296_p1 <= empty_30_fu_286_p2(12 - 1 downto 0);
    empty_32_fu_300_p2 <= std_logic_vector(unsigned(p_cast5_fu_292_p1) + unsigned(L_read_reg_386));
    empty_33_fu_318_p2 <= std_logic_vector(unsigned(p_cast7_fu_314_p1) + unsigned(syndrome_read_reg_381));
    empty_fu_207_p1 <= size_vnode(6 - 1 downto 0);
    gmem0_0_ARLEN <= ap_const_lv64_1(32 - 1 downto 0);

    gmem0_0_ARVALID_assign_proc : process(ap_CS_fsm_state4, gmem0_0_ARREADY)
    begin
        if (((gmem0_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_0_ARVALID <= ap_const_logic_1;
        else 
            gmem0_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_AWVALID_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWVALID, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem0_0_AWVALID <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_AWVALID;
        else 
            gmem0_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_BREADY_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_BREADY, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem0_0_BREADY <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_BREADY;
        else 
            gmem0_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_RREADY_assign_proc : process(ap_CS_fsm_state75, gmem0_0_RVALID)
    begin
        if (((gmem0_0_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            gmem0_0_RREADY <= ap_const_logic_1;
        else 
            gmem0_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_WVALID_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WVALID, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem0_0_WVALID <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem0_0_WVALID;
        else 
            gmem0_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_0_ARADDR_assign_proc : process(ap_CS_fsm_state2, grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARADDR, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARADDR, ap_CS_fsm_state3, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem1_0_ARADDR <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_0_ARADDR <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARADDR;
        else 
            gmem1_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_0_ARLEN_assign_proc : process(ap_CS_fsm_state2, grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARLEN, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARLEN, ap_CS_fsm_state3, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem1_0_ARLEN <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_0_ARLEN <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARLEN;
        else 
            gmem1_0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_0_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARVALID, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem1_0_ARVALID <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_0_ARVALID <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_ARVALID;
        else 
            gmem1_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_0_RREADY_assign_proc : process(ap_CS_fsm_state2, grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_RREADY, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem1_0_RREADY <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_m_axi_gmem1_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_0_RREADY <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_m_axi_gmem1_0_RREADY;
        else 
            gmem1_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_ap_start_reg;
    grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_ap_start_reg;

    grp_fu_462_ce_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_ce, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_462_ce <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_462_ce <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_ce;
        else 
            grp_fu_462_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_462_opcode_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_opcode, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_opcode, ap_CS_fsm_state3, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_462_opcode <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_462_opcode <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_opcode;
        else 
            grp_fu_462_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_462_p0_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din0, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_462_p0 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_462_p0 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din0;
        else 
            grp_fu_462_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_462_p1_assign_proc : process(grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din1, grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_462_p1 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_36_3_fu_190_grp_fu_462_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_462_p1 <= grp_compute_check_to_value_Pipeline_VITIS_LOOP_21_2_fu_178_grp_fu_462_p_din1;
        else 
            grp_fu_462_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln12_fu_251_p2 <= "1" when (i_fu_116 = select_ln12_1_reg_420) else "0";
    p_cast5_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_30_fu_286_p2),64));
    p_cast7_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_306_p3),64));
        p_cast_cast_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_fu_323_p4),64));

    p_cast_fu_323_p4 <= empty_33_fu_318_p2(63 downto 2);
    p_shl16_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_274_p3),13));
    p_shl_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_262_p3),13));
    select_ln12_1_fu_235_p3 <= 
        empty_28_fu_225_p1 when (empty_29_fu_229_p2(0) = '1') else 
        ap_const_lv5_14;
    select_ln12_fu_217_p3 <= 
        empty_fu_207_p1 when (empty_27_fu_211_p2(0) = '1') else 
        ap_const_lv6_28;
    tmp_3_fu_262_p3 <= (i_fu_116 & ap_const_lv7_0);
    tmp_4_fu_274_p3 <= (i_fu_116 & ap_const_lv5_0);
    tmp_fu_306_p3 <= (i_fu_116 & ap_const_lv2_0);
end behav;
